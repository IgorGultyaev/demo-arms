/*
	File was generated by CROC jXFW
*/
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
define(["i18n!./nls/resources"], function (resources) {
	"use strict";

	return {
		enums: {
			UserRole: {
				vt: "i4",
				flags: true,
				descr: resources["model.UserRole"],
				members: {
					Admin: {value: 2, descr: resources["model.UserRole.Admin"]},
					User: {value: 4, descr: resources["model.UserRole.User"]}
				}
			}
		},
		complex: {
		},
		entities: {
			Group: {
				descr: resources["model.Group"],
				props: {
					name: {descr: resources["model.Group.name"], vt: "string" , nullable: false, maxLen: 255},
					users: {descr: resources["model.Group.users"], vt: "object" , nullable: true, ref: "User", many: true, lazyLoad: true},
					roles: {descr: resources["model.Group.roles"], vt: "enum", flags: true  , nullable: true, ref: "UserRole"}
				}
			},
			User: {
				descr: resources["model.User"],
				props: {
					firstName: {descr: resources["model.User.firstName"], vt: "string" , nullable: true, maxLen: 255},
					lastName: {descr: resources["model.User.lastName"], vt: "string" , nullable: true, maxLen: 255},
					login: {descr: resources["model.User.login"], vt: "string" , nullable: true, maxLen: 255},
					role: {descr: resources["model.User.role"], vt: "enum", flags: true  , nullable: true, ref: "UserRole"},
					avatar: {descr: resources["model.User.avatar"], vt: "binary" , nullable: true, contentType:"image"},
					password: {descr: resources["model.User.password"], vt: "string" , nullable: true, maxLen: 255},
					created: {descr: resources["model.User.created"], vt: "dateTime" , nullable: true},
					lastLogin: {descr: resources["model.User.lastLogin"], vt: "dateTime" , nullable: true},
					groups: {descr: resources["model.User.groups"], vt: "object" , nullable: true, ref: "Group", many: true, lazyLoad: true}
				}
			}
		}
	}
});
